
@{
    ViewBag.Title = "NL_DIENTICHPHANBOXACDINH";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<link href="~/Template/css/theme.css" rel="stylesheet">
@*@model KEHOACHQH.DAL.HIENTRANG*@
@model KHQH.Models.DB.CombineHienTrang
<br />
<br />
<br />

<style>
</style>
<p class="SRheader">@Model.SetupPage.TITLE</p>
<input id="IDKYQH" value=0 class="input-text js-input" type="hidden">
<input id="IDROW" value=0 class="input-text js-input" type="hidden">
<input id="ISCAPTINH" value=0 class="input-text js-input" type="hidden">

<br />

<div class="row">
    @**@
    <div class="col-md-4">
        @(Html.DevExtreme().SelectBox()
                .DataSource(d => d.WebApi()
                            .RouteName("GetDanhMuc")
                            .LoadAction("KYQH")
                            .Key("ID"))
                             .DisplayExpr("TEN").Width(300)
                             .SearchEnabled(true).Placeholder("Chọn kỳ kế hoạch quy hoạch ")
                            .AcceptCustomValue(true).OnValueChanged("CapNhatGrid").ID("NameKYQH")
        )
    </div>
    <div class="col-md-4">
      
    </div>


</div>

</br>




    @(Html.DevExtreme().DataGrid<KHQH.Models.DB.PHANBO_XACDINH_DAPPER>()
                           .ID("grv")
                           .Selection(s => s.Mode(SelectionMode.Single))
                       //.DataSource(d => d.WebApi()
                       //               .RouteName("NhapLieu").LoadAction("GetHienTrangByID").Key("ID").LoadParams(new { @ID=1})
                       //           //.InsertAction("PostKYQH")
                       //           //.UpdateAction("PutKYQH")
                       //           //.DeleteAction("DeleteKYQH")
                       //           )

                       .ShowBorders(true)
                       .ColumnAutoWidth(true)
                       .FilterRow(f => f.Visible(true))
                       .HeaderFilter(f => f.Visible(true))
                       .ShowRowLines(true)
                       .ColumnHidingEnabled(true)
                       .Paging(p => p.PageSize(20))
                       .SearchPanel(searchPanel => searchPanel.Visible(true))
                       .OnInitNewRow("CheckKYQH")
                       .Columns(columns =>
                       {
                           columns.AddFor(m => m.ID).Caption("STT").AllowEditing(false);
                           columns.AddFor(m => m.DT_PHANBO).Caption("Diện tích phân bố").AllowEditing(true);
                           columns.AddFor(m => m.DT_XACDINH).Caption("Diện tích xác định").AllowEditing(true);
                           columns.AddFor(m => m.ID_MDSD).Caption("Mục đích sử dụng")
                                      .Lookup(lookup => lookup
                                      .DataSource(Model.LstMDSD.Select(n => new { n.ID, n.TEN }))
                                      .DisplayExpr("TEN")
                                      .ValueExpr("ID"));
                           columns.AddFor(m => m.ID_KHUCHUCNANG).Caption("Khu chức năng")
                                    .Lookup(lookup => lookup
                                    .DataSource(Model.LstLoaiKCN.Select(n => new { n.ID, n.TEN }))
                                    .DisplayExpr("TEN")
                                    .ValueExpr("ID"));



                           columns.AddFor(m => m.MAHUYEN).Caption("Huyện")
                                  .SetCellValue("setStateValue")
                                  .Lookup(lookup => lookup
                                  .DataSource(Model.LstHuyen.Select(n => new { n.MA_KVHC, n.TEN_KVHC }))
                                  .DisplayExpr("TEN_KVHC")
                                  .ValueExpr("MA_KVHC")

                                  );
                           columns.AddFor(m => m.MAXA).Caption("Xã/phường")
                                  .Lookup(lookup => lookup
                                  // .DataSource(Model.LstXa.Select(n => new { n.MA_KVHC, n.TEN_KVHC }))
                                  .DataSource("getKVHC")
                                    .DisplayExpr("TEN_KVHC")
                                  .ValueExpr("MA_KVHC"));

                           columns.AddFor(m => m.CAPTINH).DataType(GridColumnDataType.Boolean).Caption("Cấp Tỉnh").AllowEditing(true);


                       })
                       .OnInitNewRow("ChonHuyenXa")
                       .OnEditingStart("onRowClick")
                           .Editing(e => e.Mode(GridEditMode.Batch)
                           .AllowUpdating(true)
                           .AllowAdding(true)
                           .AllowDeleting(true)
                           .UseIcons(true)


                ))
    <br />











@*<div id="preloader"></div>
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>*@

<script>
    var host = API_HOST

    function ChonHuyenXa(e) {
        e.data.MAHUYEN = '@ViewData["MaHuyen"]';
        e.data.MAXA = '@ViewData["MAXA"]';
        e.data.CAPTINH = '@ViewData["ISCAPTINH"]' == 'True' ? true : false;

    }

    var DataGirdCRUDModel = (function () {
        function DataGirdCRUDModel(key, actionLoad, actionInsert, actionUpdate, actionDelete) {
            this.Key = key;
            this.ActionLoad = API_HOST + actionLoad;
            this.ActionInsert = actionInsert;
            this.ActionUpdate = actionUpdate;
            this.ActionDelete = API_HOST + actionDelete;
        }
        return DataGirdCRUDModel;
    }());
    InitDataSource = function (obj) {
        var gridSource = {
            store: (DevExpress.data).AspNet.createStore({
                key: obj.Key,
                loadUrl: obj.ActionLoad,
                insertUrl: obj.ActionInsert,
                updateUrl: obj.ActionUpdate,
                deleteUrl: obj.ActionDelete,
                loadParams: obj.LoadParams,
            })
        };
        return gridSource;
    };
    window.onload = function () {
        console.log('OnLoad')
        var grid = $("#grv").dxDataGrid("instance");
        var objAction = new DataGirdCRUDModel("ID", "api/NhapLieu/GetDienTichPBXDByID?ID=" + 0, "/api/NhapLieu/PostDienTichPBXD?IDKYQH=" + 0, "/api/NhapLieu/PutDienTichPBXD", "/api/NhapLieu/DeleteDienTichPBXD");
        grid.option("dataSource", InitDataSource(objAction));
    }

    function onRowClick(e) {
        $('#IDROW').val(e.key)

    }
    function CheckKYQH(e)
    {
        console.log()
        if ($('#NameKYQH').dxSelectBox("instance").option().value == null)
        {
            alert("Vui lòng chọn kỳ quy hoạch")
            window.setTimeout(function () { e.component.cancelEditData(); }, 0)

        }

    }

    function validateText() {
        console.log(DevExpress.validationEngine)
        return DevExpress.validationEngine.validateGroup("ValidateText").isValid;
    }

    function getKVHC(options) {
        return {
            store: DevExpress.data.AspNet.createStore({
                key: "MA_KVHC",
                loadUrl: '/api/'+'@Url.Action("KVHC", "GetDanhMuc")'
               // loadUrl:'/api/GetDanhMuc/KVHC'
            }),
            filter: options.data ? ["MA_KVHC_CHA", "=", options.data.MAHUYEN] : null
        };
    }
    function setStateValue(rowData, value) {
        rowData.MAHUYEN = value;
        rowData.MAXA = null;
    }
    function CapNhatGrid(e) {
        console.log(e)
        $('#IDKYQH').val(e.value.ID)
        var grid = $("#grv").dxDataGrid("instance");
        var objAction = new DataGirdCRUDModel("ID", "api/NhapLieu/GetDienTichPBXDByID?ID=" + e.value.ID, "/api/NhapLieu/PostDienTichPBXD?IDKYQH=" + e.value.ID, "/api/NhapLieu/PutDienTichPBXD", "/api/NhapLieu/DeleteDienTichPBXD");
        grid.option("dataSource", InitDataSource(objAction));



    }

    function CapTinhCheck(e) {
        $('#ISCAPTINH').val(e.value)

    }
    $(document).ready(function () {











    });
</script>