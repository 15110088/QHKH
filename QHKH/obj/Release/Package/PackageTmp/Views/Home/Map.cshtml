
@{
    ViewBag.Title = "Index";
}
<link rel="stylesheet" type="text/css" href="~/Template/css/map.css" />
@model KHQH.Models.DB.CombineHienTrang

<style>
    #viewDiv {
        width: 100%;
        height: 100vh;
        margin-top: 30px; /*position: fixed;
        margin-top:200px;
        width: 100%;
        height: 100%;
        left: 0;
        top: 0;
        background: rgba(51,51,51,0.7);*/
    }
    .ThongSo {
        background-color: #72fd9f;
        border-radius: 10px;
        margin: 10px
    }
    .TextThongSo {
        text-align: center;
        margin: 10px;
        color: #000;
    }
</style>
@{
    ViewData["Title"] = "Home Page";
}

<div id="viewDiv">


</div>

<div class="modal fade" id="modalHienTrang"  tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="false">

    <div class="modal-dialog modal-lg">
        <div class="modal-content">

            <div class="modal-header">
                <h2 class="SRheader" style="color:#36C970">
                    <i style="width:50px" class="bi bi-info-circle-fill"></i>
                    Thông tin vùng
                </h2>
                <button type="button" style="position:absolute;right:0px;top:0px;margin:10px" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="container">
                    <ul class="container__list">
                        <li class="container__item container__item_active">
                            <span class="container__link SRbutton" style="font-weight:bold">HIỆN TRẠNG</span>
                        </li>
                        <li class="container__item">
                            <span class="container__link SRbutton" style="font-weight:bold">KẾ HOẠCH</span>
                        </li>
                        <li class="container__item">
                            <span class="container__link SRbutton" style="font-weight:bold">QUY HOẠCH</span>
                        </li>
                        <li class="container__item">
                            <span class="container__link SRbutton" style="font-weight:bold">KHU CHỨC NĂNG</span>
                        </li>
                        <li class="container__item">
                            <span class="container__link SRbutton" style="font-weight:bold">CÔNG TRÌNH</span>
                        </li>
                    </ul>
                    <div class="container__inner">
                        <h2 id="MVHT" class="content__subtitle">Mã vùng:</h2>

                        <div class="row">

                            <div class="col-sm ThongSo">
                                    <p class="SRtitle3 TextThongSo">Tên vùng</p>
                                    <p id="TVHT" class="SRtitle2 TextThongSo">123</p>
                                

                            </div>
                            
                            <div class="col-sm ThongSo">
                                <p class="SRtitle3 TextThongSo">Diện tích</p>
                                <p id="DTHT" class="SRtitle2 TextThongSo">0</p>
                            </div>
                            <div class="col-sm ThongSo">
                                <p class="SRtitle3 TextThongSo">Loại đất</p>
                                <p id="LDHT" class="SRtitle2 TextThongSo"></p>
                            </div>

                        </div>
                        
                    </div>
                    <div class="container__inner container__inner_hidden">
                        
                    </div>
                    <div class="container__inner container__inner_hidden">
                        
                    </div>
                    <div class="container__inner container__inner_hidden">
                       
                    </div>
                    <div class="container__inner container__inner_hidden">
                        
                    </div>
                </div>
            </div>

        </div>
        <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
            <img id="ImgLoading" class="unActiveLoading" src="~/Content/img/Spinner-1s-200px.gif" alt="">
        </div>
    </div>


</div>

<div class="search-wrapper">
    <div class="input-holder">
        <input type="text" id="IDSearch" class="search-input" placeholder="Nhập mã hiện trạng" />
        <button class="search-icon" id="btnSearch" onclick="searchToggle(this, event);"><span></span></button>
    </div>
    <span class="close" onclick="searchToggle(this, event);"></span>
</div>

<div class="modal fade" id="modalKVHC" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">

            <div class="modal-header">
                <h2 class="SRheader" style="color:#36C970">
                    <i style="width:50px" class="bi bi-geo-alt-fill"></i>
                    Khu vực hành chính
                </h2>
                <button type="button" style="position:absolute;right:0px;top:0px;margin:10px" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">

                <div class="container d-flex justify-content-center">

                    <div class="card">

                        <div class="card-body py-2 px-2">



                            @using (Html.DevExtreme().ValidationGroup("ValidateText"))
                            {
                                <div class="row rone">
                                    <div class="col-md-6">
                                        <label style="text-align:left" class="SRBody">TP/Huyện</label>
                                        @(Html.DevExtreme().SelectBoxFor(n => n.HienTrang.MAHUYEN)
            .DataSource(Model.LstHuyen.Select(n => new { n.MA_KVHC, n.TEN_KVHC }))
            .SearchEnabled(true).Placeholder("Huyện")
            .AcceptCustomValue(true).IsValid(true)
            .ValueExpr("MA_KVHC").OnValueChanged("GetIDHUYEN")
            .DisplayExpr("TEN_KVHC").ID("IDHUYEN")
                                        )
                                    </div>
                                    <div class="col-md-6">
                                        <label style="text-align:left" class="SRBody">Phường/Xã</label>

                                        @(Html.DevExtreme().SelectBoxFor(n => n.HienTrang.MAXA)
        .DataSource(Model.LstXa.Select(n => new { n.MA_KVHC, n.TEN_KVHC }))
        .SearchEnabled(true).Placeholder("Xã")
        .AcceptCustomValue(true)
        .ValueExpr("MA_KVHC").IsValid(true)
        .DisplayExpr("TEN_KVHC").ID("IDXA")
                                        )
                                    </div>
                                </div>
                            }
                            <div class="row rone mx-1 my-3">

                                <button type="submit" id="btnKVHC" style="background:#36C970;border-color:#36C970" class="btn btn-primary SRbutton">Xác nhận</button>
                            </div>

                            <p style="color:red" class=".SRtitle3" id="lbError"></p>
                        </div>

                    </div>
                </div>
            </div>
            <div style="position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%);">
                <img id="ImgLoading" class="unActiveLoading" src="~/Content/img/Spinner-1s-200px.gif" alt="">
            </div>
        </div>
    </div>
</div>





<script>
    function GetIDHUYEN(e) {
        console.log(e)
        $.ajax({
            url: '/api/GetDanhMuc/KVHCByIDHUYEN?ID=' + e.value,
            type: 'get',
            success: function (data) {
                console.log(data)
                var newStore = new DevExpress.data.ArrayStore({
                    data: data.data,
                    key: 'MA_KVHC',

                })
                $("#IDXA").dxSelectBox({
                    dataSource: newStore
                })
            },
            error: function () {

            }
        })
    }
            
    function searchToggle(obj, evt) {
        var container = $(obj).closest('.search-wrapper');
        if (!container.hasClass('active')) {
            container.addClass('active');
            evt.preventDefault();
        }
        else if (container.hasClass('active') && $(obj).closest('.input-holder').length == 0) {
            container.removeClass('active');
            // clear input
            container.find('.search-input').val('');
        }
    }

    let tabContent = document.querySelectorAll(".container__inner");
    let tabItem = document.querySelectorAll(".container__item");

    // For each element with class 'container__item'
    for (let i = 0; i < tabItem.length; i++) {
        // if the element was hovered
        //you can replace mouseover with click
        tabItem[i].addEventListener("mouseover", () => {
            // Add to all containers class 'container__inner_hidden'
            tabContent.forEach((item) => {
                item.classList.add("container__inner_hidden");
            });
            // Clean all links from class 'container__item_active'
            tabItem.forEach((item) => {
                item.classList.remove("container__item_active");
            });
            // Make visible correct tab content and add class to item
            tabContent[i].classList.remove("container__inner_hidden");
            tabItem[i].classList.add("container__item_active");
        });
    }
    var view, map, trailheadsLayer;

    require(["esri/config", "esri/Map", "esri/views/MapView",
        "esri/layers/FeatureLayer", "esri/layers/TileLayer",
        "dojo/_base/connect", "esri/tasks/QueryTask",
        "esri/tasks/support/Query", "esri/geometry/geometryEngine",
        "esri/geometry/SpatialReference",
        "esri/Graphic", "esri/layers/GraphicsLayer"],
        function (esriConfig, Map, MapView, FeatureLayer, TileLayer,
            connect, QueryTask, Query, geometryEngine, SpatialReference,
            Graphic, GraphicsLayer) {
        esriConfig.apiKey = "AAPKcf5d235ac0524b2dacf60020ea3968615zgFIieNncDmP-DJ7dACIO-l7xoTVvfFQHaxpBCuttdFeX8f44xCep0YwIpgqljZ";
        const vtlLayer = new TileLayer({
            url: "https://server.arcgisonline.com/arcgis/rest/services/Reference/World_Transportation/MapServer"
            // url: "http://datdai.stnmt.dongnai.gov.vn:8080/arcgisdatdaissl1/rest/services/75731/26068/MapServer"
        });
        const map = new Map({
            basemap: "arcgis-topographic", // Basemap layer service
           // layers: [vtlLayer]

        });




        const template = {
            // NAME and COUNTY are fields in the service containing the Census Tract (NAME) and county of the feature
            title: "{MAVUNG}",
        };
      
        const view = new MapView({
            map: map,
            center: [107.2672217, 10.4944512], // Longitude, latitude
            zoom: 13, // Zoom level
            container: "viewDiv" // Div element
        });

        trailheadsLayer = new FeatureLayer({
            url: "@ViewData["URL"]",
            outFields: ["*"],
            popupTemplate: template,
            spatialReference: SpatialReference.WGS84


        });

        //trailheadsLayer
        //    .when(() => {
        //        return trailheadsLayer.queryExtent();
        //    })
        //    .then((response) => {
        //        view.goTo(response.extent);
        //    });
       
        map.add(trailheadsLayer);
        const graphicsLayer = new GraphicsLayer();
        map.add(graphicsLayer);
        view.on("click", function (event) {
           // console.log(event.mapPoint.latitude + ' ' + event.mapPoint.longitude)
            view.hitTest(event)
                .then(function (response) {
                    const BorderFeature = {
                        type: "simple-fill",
                        color: [20, 130, 200, 0.5],
                        outline: {
                            color: "red",
                            width: 4
                        },
                    };
                    console.log(response)
                    view.goTo(response.results[0].graphic.geometry)
                   // response.results[0].graphic.symbol = BorderFeature;
                   // view.graphics.addMany(response.results[0].graphic);
                    //const simpleMarkerSymbol = {
                    //    type: "simple-marker",
                    //    color: [226, 119, 40],  // Orange
                    //    style: "square",
                    //    outline: {
                    //        color: [255, 255, 255], // White
                    //        width: 1
                    //    }
                    //};
                    //const point = { //Create a point
                    //    type: "point",
                    //    longitude: event.mapPoint.longitude,
                    //    latitude: event.mapPoint.latitude
                    //};
                    //const pointGraphic = new Graphic({
                    //    geometry: point,
                    //    symbol: BorderFeature
                    //});
                    //graphicsLayer.add(pointGraphic)



                    $('#MVHT').text('Mã vùng: '+response.results[0].graphic.attributes.MAVUNG)
                    $('#TVHT').text(response.results[0].graphic.attributes.TEN )
                    $('#LDHT').text(response.results[0].graphic.attributes.LOAIDAT)
                   $('#DTHT').text(geometryEngine.geodesicArea(response.results[0].graphic.geometry, "square-meters").toFixed(1))
                    console.log(geometryEngine.geodesicArea(response.results[0].graphic.geometry, "square-meters"))
                    $('#modalHienTrang').modal('show');

                })
        })
        $('#btnSearch').click(function () {
            console.log('123')
            console.log($('#IDSearch').val())

            let whereClause = "MAVUNG='"+ $('#IDSearch').val()+"'";
            const parcelQuery = {
                where: whereClause,  // Set by select element
                spatialRelationship: "intersects", // Relationship operation to apply
                geometry: view.extent, // Restricted to visible extent of the map
                outFields: ["*"], // Attributes to return
                returnGeometry: true
            };
            trailheadsLayer.queryFeatures(parcelQuery)
                .then((results) => {
                    console.log(results.features)
                    displayResults(results);
                }).catch((error) => {
                    console.log(error);
                });

        })

            function displayResults(results) {
                console.log(results)
                // Create a blue polygon
                const symbol = {
                    type: "simple-fill",
                    color: [20, 130, 200, 0.5],
                    outline: {
                        color: "white",
                        width: .5
                    },
                };



                // Assign styles and popup to features

                results.features.map((feature) => {

                    feature.symbol = symbol;
                    feature.popupTemplate = template;
                    return feature;
                });


                // Clear display
               view.popup.close();
                view.graphics.removeAll();
                // Add features to graphics layer
                view.graphics.addMany(results.features);
                view.goTo(results.features[0].geometry).then(function () {
                    view.popup.open({
                        features: results.features,
                        featureMenuOpen: true,
                        updateLocationEnabled: true
                    });
                }).catch(function (error) {
                    if (error.name != "AbortError") {
                        console.error(error);
                    }
                });;

            }
        //view.map = map
        });
    $(document).ready(function () {
        $('#KVHC').click(function () {
            console.log('13')
            $('#modalKVHC').modal('show');

        })
    })
</script>